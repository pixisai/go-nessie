/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetContentV2200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetContentV2200Response{}

// GetContentV2200Response struct for GetContentV2200Response
type GetContentV2200Response struct {
	Content Content5 `json:"content"`
	EffectiveReference Reference3 `json:"effectiveReference"`
	Documentation *PutContentOperationForAContentKeyDocumentation `json:"documentation,omitempty"`
}

type _GetContentV2200Response GetContentV2200Response

// NewGetContentV2200Response instantiates a new GetContentV2200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetContentV2200Response(content Content5, effectiveReference Reference3) *GetContentV2200Response {
	this := GetContentV2200Response{}
	this.Content = content
	this.EffectiveReference = effectiveReference
	return &this
}

// NewGetContentV2200ResponseWithDefaults instantiates a new GetContentV2200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetContentV2200ResponseWithDefaults() *GetContentV2200Response {
	this := GetContentV2200Response{}
	return &this
}

// GetContent returns the Content field value
func (o *GetContentV2200Response) GetContent() Content5 {
	if o == nil {
		var ret Content5
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *GetContentV2200Response) GetContentOk() (*Content5, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *GetContentV2200Response) SetContent(v Content5) {
	o.Content = v
}

// GetEffectiveReference returns the EffectiveReference field value
func (o *GetContentV2200Response) GetEffectiveReference() Reference3 {
	if o == nil {
		var ret Reference3
		return ret
	}

	return o.EffectiveReference
}

// GetEffectiveReferenceOk returns a tuple with the EffectiveReference field value
// and a boolean to check if the value has been set.
func (o *GetContentV2200Response) GetEffectiveReferenceOk() (*Reference3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveReference, true
}

// SetEffectiveReference sets field value
func (o *GetContentV2200Response) SetEffectiveReference(v Reference3) {
	o.EffectiveReference = v
}

// GetDocumentation returns the Documentation field value if set, zero value otherwise.
func (o *GetContentV2200Response) GetDocumentation() PutContentOperationForAContentKeyDocumentation {
	if o == nil || IsNil(o.Documentation) {
		var ret PutContentOperationForAContentKeyDocumentation
		return ret
	}
	return *o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContentV2200Response) GetDocumentationOk() (*PutContentOperationForAContentKeyDocumentation, bool) {
	if o == nil || IsNil(o.Documentation) {
		return nil, false
	}
	return o.Documentation, true
}

// HasDocumentation returns a boolean if a field has been set.
func (o *GetContentV2200Response) HasDocumentation() bool {
	if o != nil && !IsNil(o.Documentation) {
		return true
	}

	return false
}

// SetDocumentation gets a reference to the given PutContentOperationForAContentKeyDocumentation and assigns it to the Documentation field.
func (o *GetContentV2200Response) SetDocumentation(v PutContentOperationForAContentKeyDocumentation) {
	o.Documentation = &v
}

func (o GetContentV2200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetContentV2200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	toSerialize["effectiveReference"] = o.EffectiveReference
	if !IsNil(o.Documentation) {
		toSerialize["documentation"] = o.Documentation
	}
	return toSerialize, nil
}

func (o *GetContentV2200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
		"effectiveReference",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetContentV2200Response := _GetContentV2200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetContentV2200Response)

	if err != nil {
		return err
	}

	*o = GetContentV2200Response(varGetContentV2200Response)

	return err
}

type NullableGetContentV2200Response struct {
	value *GetContentV2200Response
	isSet bool
}

func (v NullableGetContentV2200Response) Get() *GetContentV2200Response {
	return v.value
}

func (v *NullableGetContentV2200Response) Set(val *GetContentV2200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetContentV2200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetContentV2200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetContentV2200Response(val *GetContentV2200Response) *NullableGetContentV2200Response {
	return &NullableGetContentV2200Response{value: val, isSet: true}
}

func (v NullableGetContentV2200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetContentV2200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


