/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RepositoryConfigResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepositoryConfigResponseV2{}

// RepositoryConfigResponseV2 The existing configuration objects for the requested types will be returned. Non-existing config objects will not be returned.
type RepositoryConfigResponseV2 struct {
	// The existing configuration objects for the requested types will be returned. Non-existing config objects will not be returned.
	Configs []GarbageCollectorConfigObject `json:"configs,omitempty"`
}

// NewRepositoryConfigResponseV2 instantiates a new RepositoryConfigResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryConfigResponseV2() *RepositoryConfigResponseV2 {
	this := RepositoryConfigResponseV2{}
	return &this
}

// NewRepositoryConfigResponseV2WithDefaults instantiates a new RepositoryConfigResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryConfigResponseV2WithDefaults() *RepositoryConfigResponseV2 {
	this := RepositoryConfigResponseV2{}
	return &this
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *RepositoryConfigResponseV2) GetConfigs() []GarbageCollectorConfigObject {
	if o == nil || IsNil(o.Configs) {
		var ret []GarbageCollectorConfigObject
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryConfigResponseV2) GetConfigsOk() ([]GarbageCollectorConfigObject, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *RepositoryConfigResponseV2) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []GarbageCollectorConfigObject and assigns it to the Configs field.
func (o *RepositoryConfigResponseV2) SetConfigs(v []GarbageCollectorConfigObject) {
	o.Configs = v
}

func (o RepositoryConfigResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepositoryConfigResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	return toSerialize, nil
}

type NullableRepositoryConfigResponseV2 struct {
	value *RepositoryConfigResponseV2
	isSet bool
}

func (v NullableRepositoryConfigResponseV2) Get() *RepositoryConfigResponseV2 {
	return v.value
}

func (v *NullableRepositoryConfigResponseV2) Set(val *RepositoryConfigResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryConfigResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryConfigResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryConfigResponseV2(val *RepositoryConfigResponseV2) *NullableRepositoryConfigResponseV2 {
	return &NullableRepositoryConfigResponseV2{value: val, isSet: true}
}

func (v NullableRepositoryConfigResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryConfigResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


