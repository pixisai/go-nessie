/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetMultipleContentsRequest1RequestedKeysInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMultipleContentsRequest1RequestedKeysInner{}

// GetMultipleContentsRequest1RequestedKeysInner struct for GetMultipleContentsRequest1RequestedKeysInner
type GetMultipleContentsRequest1RequestedKeysInner struct {
	Elements []string `json:"elements"`
}

type _GetMultipleContentsRequest1RequestedKeysInner GetMultipleContentsRequest1RequestedKeysInner

// NewGetMultipleContentsRequest1RequestedKeysInner instantiates a new GetMultipleContentsRequest1RequestedKeysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMultipleContentsRequest1RequestedKeysInner(elements []string) *GetMultipleContentsRequest1RequestedKeysInner {
	this := GetMultipleContentsRequest1RequestedKeysInner{}
	this.Elements = elements
	return &this
}

// NewGetMultipleContentsRequest1RequestedKeysInnerWithDefaults instantiates a new GetMultipleContentsRequest1RequestedKeysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMultipleContentsRequest1RequestedKeysInnerWithDefaults() *GetMultipleContentsRequest1RequestedKeysInner {
	this := GetMultipleContentsRequest1RequestedKeysInner{}
	return &this
}

// GetElements returns the Elements field value
func (o *GetMultipleContentsRequest1RequestedKeysInner) GetElements() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value
// and a boolean to check if the value has been set.
func (o *GetMultipleContentsRequest1RequestedKeysInner) GetElementsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Elements, true
}

// SetElements sets field value
func (o *GetMultipleContentsRequest1RequestedKeysInner) SetElements(v []string) {
	o.Elements = v
}

func (o GetMultipleContentsRequest1RequestedKeysInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMultipleContentsRequest1RequestedKeysInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["elements"] = o.Elements
	return toSerialize, nil
}

func (o *GetMultipleContentsRequest1RequestedKeysInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"elements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMultipleContentsRequest1RequestedKeysInner := _GetMultipleContentsRequest1RequestedKeysInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMultipleContentsRequest1RequestedKeysInner)

	if err != nil {
		return err
	}

	*o = GetMultipleContentsRequest1RequestedKeysInner(varGetMultipleContentsRequest1RequestedKeysInner)

	return err
}

type NullableGetMultipleContentsRequest1RequestedKeysInner struct {
	value *GetMultipleContentsRequest1RequestedKeysInner
	isSet bool
}

func (v NullableGetMultipleContentsRequest1RequestedKeysInner) Get() *GetMultipleContentsRequest1RequestedKeysInner {
	return v.value
}

func (v *NullableGetMultipleContentsRequest1RequestedKeysInner) Set(val *GetMultipleContentsRequest1RequestedKeysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMultipleContentsRequest1RequestedKeysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMultipleContentsRequest1RequestedKeysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMultipleContentsRequest1RequestedKeysInner(val *GetMultipleContentsRequest1RequestedKeysInner) *NullableGetMultipleContentsRequest1RequestedKeysInner {
	return &NullableGetMultipleContentsRequest1RequestedKeysInner{value: val, isSet: true}
}

func (v NullableGetMultipleContentsRequest1RequestedKeysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMultipleContentsRequest1RequestedKeysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


