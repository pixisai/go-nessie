/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MergePerContentKeyDetails1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergePerContentKeyDetails1{}

// MergePerContentKeyDetails1 struct for MergePerContentKeyDetails1
type MergePerContentKeyDetails1 struct {
	Key *AddedContentKey `json:"key,omitempty"`
	MergeBehavior *string `json:"mergeBehavior,omitempty"`
}

// NewMergePerContentKeyDetails1 instantiates a new MergePerContentKeyDetails1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergePerContentKeyDetails1() *MergePerContentKeyDetails1 {
	this := MergePerContentKeyDetails1{}
	return &this
}

// NewMergePerContentKeyDetails1WithDefaults instantiates a new MergePerContentKeyDetails1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergePerContentKeyDetails1WithDefaults() *MergePerContentKeyDetails1 {
	this := MergePerContentKeyDetails1{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MergePerContentKeyDetails1) GetKey() AddedContentKey {
	if o == nil || IsNil(o.Key) {
		var ret AddedContentKey
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergePerContentKeyDetails1) GetKeyOk() (*AddedContentKey, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MergePerContentKeyDetails1) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given AddedContentKey and assigns it to the Key field.
func (o *MergePerContentKeyDetails1) SetKey(v AddedContentKey) {
	o.Key = &v
}

// GetMergeBehavior returns the MergeBehavior field value if set, zero value otherwise.
func (o *MergePerContentKeyDetails1) GetMergeBehavior() string {
	if o == nil || IsNil(o.MergeBehavior) {
		var ret string
		return ret
	}
	return *o.MergeBehavior
}

// GetMergeBehaviorOk returns a tuple with the MergeBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergePerContentKeyDetails1) GetMergeBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.MergeBehavior) {
		return nil, false
	}
	return o.MergeBehavior, true
}

// HasMergeBehavior returns a boolean if a field has been set.
func (o *MergePerContentKeyDetails1) HasMergeBehavior() bool {
	if o != nil && !IsNil(o.MergeBehavior) {
		return true
	}

	return false
}

// SetMergeBehavior gets a reference to the given string and assigns it to the MergeBehavior field.
func (o *MergePerContentKeyDetails1) SetMergeBehavior(v string) {
	o.MergeBehavior = &v
}

func (o MergePerContentKeyDetails1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergePerContentKeyDetails1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.MergeBehavior) {
		toSerialize["mergeBehavior"] = o.MergeBehavior
	}
	return toSerialize, nil
}

type NullableMergePerContentKeyDetails1 struct {
	value *MergePerContentKeyDetails1
	isSet bool
}

func (v NullableMergePerContentKeyDetails1) Get() *MergePerContentKeyDetails1 {
	return v.value
}

func (v *NullableMergePerContentKeyDetails1) Set(val *MergePerContentKeyDetails1) {
	v.value = val
	v.isSet = true
}

func (v NullableMergePerContentKeyDetails1) IsSet() bool {
	return v.isSet
}

func (v *NullableMergePerContentKeyDetails1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergePerContentKeyDetails1(val *MergePerContentKeyDetails1) *NullableMergePerContentKeyDetails1 {
	return &NullableMergePerContentKeyDetails1{value: val, isSet: true}
}

func (v NullableMergePerContentKeyDetails1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergePerContentKeyDetails1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


