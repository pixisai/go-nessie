/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetMultipleContentsResponseV1ContentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMultipleContentsResponseV1ContentsInner{}

// GetMultipleContentsResponseV1ContentsInner struct for GetMultipleContentsResponseV1ContentsInner
type GetMultipleContentsResponseV1ContentsInner struct {
	Key AddedContentKey `json:"key"`
	Content Content3 `json:"content"`
}

type _GetMultipleContentsResponseV1ContentsInner GetMultipleContentsResponseV1ContentsInner

// NewGetMultipleContentsResponseV1ContentsInner instantiates a new GetMultipleContentsResponseV1ContentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMultipleContentsResponseV1ContentsInner(key AddedContentKey, content Content3) *GetMultipleContentsResponseV1ContentsInner {
	this := GetMultipleContentsResponseV1ContentsInner{}
	this.Key = key
	this.Content = content
	return &this
}

// NewGetMultipleContentsResponseV1ContentsInnerWithDefaults instantiates a new GetMultipleContentsResponseV1ContentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMultipleContentsResponseV1ContentsInnerWithDefaults() *GetMultipleContentsResponseV1ContentsInner {
	this := GetMultipleContentsResponseV1ContentsInner{}
	return &this
}

// GetKey returns the Key field value
func (o *GetMultipleContentsResponseV1ContentsInner) GetKey() AddedContentKey {
	if o == nil {
		var ret AddedContentKey
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GetMultipleContentsResponseV1ContentsInner) GetKeyOk() (*AddedContentKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GetMultipleContentsResponseV1ContentsInner) SetKey(v AddedContentKey) {
	o.Key = v
}

// GetContent returns the Content field value
func (o *GetMultipleContentsResponseV1ContentsInner) GetContent() Content3 {
	if o == nil {
		var ret Content3
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *GetMultipleContentsResponseV1ContentsInner) GetContentOk() (*Content3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *GetMultipleContentsResponseV1ContentsInner) SetContent(v Content3) {
	o.Content = v
}

func (o GetMultipleContentsResponseV1ContentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMultipleContentsResponseV1ContentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["content"] = o.Content
	return toSerialize, nil
}

func (o *GetMultipleContentsResponseV1ContentsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMultipleContentsResponseV1ContentsInner := _GetMultipleContentsResponseV1ContentsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMultipleContentsResponseV1ContentsInner)

	if err != nil {
		return err
	}

	*o = GetMultipleContentsResponseV1ContentsInner(varGetMultipleContentsResponseV1ContentsInner)

	return err
}

type NullableGetMultipleContentsResponseV1ContentsInner struct {
	value *GetMultipleContentsResponseV1ContentsInner
	isSet bool
}

func (v NullableGetMultipleContentsResponseV1ContentsInner) Get() *GetMultipleContentsResponseV1ContentsInner {
	return v.value
}

func (v *NullableGetMultipleContentsResponseV1ContentsInner) Set(val *GetMultipleContentsResponseV1ContentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMultipleContentsResponseV1ContentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMultipleContentsResponseV1ContentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMultipleContentsResponseV1ContentsInner(val *GetMultipleContentsResponseV1ContentsInner) *NullableGetMultipleContentsResponseV1ContentsInner {
	return &NullableGetMultipleContentsResponseV1ContentsInner{value: val, isSet: true}
}

func (v NullableGetMultipleContentsResponseV1ContentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMultipleContentsResponseV1ContentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


