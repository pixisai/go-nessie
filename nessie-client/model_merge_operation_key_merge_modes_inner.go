/*
Nessie API

Transactional Catalog for Data Lakes  * Git-inspired data version control * Cross-table transactions and visibility * Works with Apache Iceberg tables

API version: 0.102.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MergeOperationKeyMergeModesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergeOperationKeyMergeModesInner{}

// MergeOperationKeyMergeModesInner struct for MergeOperationKeyMergeModesInner
type MergeOperationKeyMergeModesInner struct {
	Key *GetMultipleContentsRequest1RequestedKeysInner `json:"key,omitempty"`
	MergeBehavior *string `json:"mergeBehavior,omitempty"`
	ExpectedTargetContent *Content2 `json:"expectedTargetContent,omitempty"`
	ResolvedContent *Content2 `json:"resolvedContent,omitempty"`
	ExpectedTargetDocumentation *PutContentOperationForAContentKeyDocumentation `json:"expectedTargetDocumentation,omitempty"`
	ResolvedDocumentation *PutContentOperationForAContentKeyDocumentation `json:"resolvedDocumentation,omitempty"`
	Metadata []ContentMetadata1 `json:"metadata,omitempty"`
}

// NewMergeOperationKeyMergeModesInner instantiates a new MergeOperationKeyMergeModesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeOperationKeyMergeModesInner() *MergeOperationKeyMergeModesInner {
	this := MergeOperationKeyMergeModesInner{}
	return &this
}

// NewMergeOperationKeyMergeModesInnerWithDefaults instantiates a new MergeOperationKeyMergeModesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeOperationKeyMergeModesInnerWithDefaults() *MergeOperationKeyMergeModesInner {
	this := MergeOperationKeyMergeModesInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetKey() GetMultipleContentsRequest1RequestedKeysInner {
	if o == nil || IsNil(o.Key) {
		var ret GetMultipleContentsRequest1RequestedKeysInner
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetKeyOk() (*GetMultipleContentsRequest1RequestedKeysInner, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given GetMultipleContentsRequest1RequestedKeysInner and assigns it to the Key field.
func (o *MergeOperationKeyMergeModesInner) SetKey(v GetMultipleContentsRequest1RequestedKeysInner) {
	o.Key = &v
}

// GetMergeBehavior returns the MergeBehavior field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetMergeBehavior() string {
	if o == nil || IsNil(o.MergeBehavior) {
		var ret string
		return ret
	}
	return *o.MergeBehavior
}

// GetMergeBehaviorOk returns a tuple with the MergeBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetMergeBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.MergeBehavior) {
		return nil, false
	}
	return o.MergeBehavior, true
}

// HasMergeBehavior returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasMergeBehavior() bool {
	if o != nil && !IsNil(o.MergeBehavior) {
		return true
	}

	return false
}

// SetMergeBehavior gets a reference to the given string and assigns it to the MergeBehavior field.
func (o *MergeOperationKeyMergeModesInner) SetMergeBehavior(v string) {
	o.MergeBehavior = &v
}

// GetExpectedTargetContent returns the ExpectedTargetContent field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetExpectedTargetContent() Content2 {
	if o == nil || IsNil(o.ExpectedTargetContent) {
		var ret Content2
		return ret
	}
	return *o.ExpectedTargetContent
}

// GetExpectedTargetContentOk returns a tuple with the ExpectedTargetContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetExpectedTargetContentOk() (*Content2, bool) {
	if o == nil || IsNil(o.ExpectedTargetContent) {
		return nil, false
	}
	return o.ExpectedTargetContent, true
}

// HasExpectedTargetContent returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasExpectedTargetContent() bool {
	if o != nil && !IsNil(o.ExpectedTargetContent) {
		return true
	}

	return false
}

// SetExpectedTargetContent gets a reference to the given Content2 and assigns it to the ExpectedTargetContent field.
func (o *MergeOperationKeyMergeModesInner) SetExpectedTargetContent(v Content2) {
	o.ExpectedTargetContent = &v
}

// GetResolvedContent returns the ResolvedContent field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetResolvedContent() Content2 {
	if o == nil || IsNil(o.ResolvedContent) {
		var ret Content2
		return ret
	}
	return *o.ResolvedContent
}

// GetResolvedContentOk returns a tuple with the ResolvedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetResolvedContentOk() (*Content2, bool) {
	if o == nil || IsNil(o.ResolvedContent) {
		return nil, false
	}
	return o.ResolvedContent, true
}

// HasResolvedContent returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasResolvedContent() bool {
	if o != nil && !IsNil(o.ResolvedContent) {
		return true
	}

	return false
}

// SetResolvedContent gets a reference to the given Content2 and assigns it to the ResolvedContent field.
func (o *MergeOperationKeyMergeModesInner) SetResolvedContent(v Content2) {
	o.ResolvedContent = &v
}

// GetExpectedTargetDocumentation returns the ExpectedTargetDocumentation field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetExpectedTargetDocumentation() PutContentOperationForAContentKeyDocumentation {
	if o == nil || IsNil(o.ExpectedTargetDocumentation) {
		var ret PutContentOperationForAContentKeyDocumentation
		return ret
	}
	return *o.ExpectedTargetDocumentation
}

// GetExpectedTargetDocumentationOk returns a tuple with the ExpectedTargetDocumentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetExpectedTargetDocumentationOk() (*PutContentOperationForAContentKeyDocumentation, bool) {
	if o == nil || IsNil(o.ExpectedTargetDocumentation) {
		return nil, false
	}
	return o.ExpectedTargetDocumentation, true
}

// HasExpectedTargetDocumentation returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasExpectedTargetDocumentation() bool {
	if o != nil && !IsNil(o.ExpectedTargetDocumentation) {
		return true
	}

	return false
}

// SetExpectedTargetDocumentation gets a reference to the given PutContentOperationForAContentKeyDocumentation and assigns it to the ExpectedTargetDocumentation field.
func (o *MergeOperationKeyMergeModesInner) SetExpectedTargetDocumentation(v PutContentOperationForAContentKeyDocumentation) {
	o.ExpectedTargetDocumentation = &v
}

// GetResolvedDocumentation returns the ResolvedDocumentation field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetResolvedDocumentation() PutContentOperationForAContentKeyDocumentation {
	if o == nil || IsNil(o.ResolvedDocumentation) {
		var ret PutContentOperationForAContentKeyDocumentation
		return ret
	}
	return *o.ResolvedDocumentation
}

// GetResolvedDocumentationOk returns a tuple with the ResolvedDocumentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetResolvedDocumentationOk() (*PutContentOperationForAContentKeyDocumentation, bool) {
	if o == nil || IsNil(o.ResolvedDocumentation) {
		return nil, false
	}
	return o.ResolvedDocumentation, true
}

// HasResolvedDocumentation returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasResolvedDocumentation() bool {
	if o != nil && !IsNil(o.ResolvedDocumentation) {
		return true
	}

	return false
}

// SetResolvedDocumentation gets a reference to the given PutContentOperationForAContentKeyDocumentation and assigns it to the ResolvedDocumentation field.
func (o *MergeOperationKeyMergeModesInner) SetResolvedDocumentation(v PutContentOperationForAContentKeyDocumentation) {
	o.ResolvedDocumentation = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MergeOperationKeyMergeModesInner) GetMetadata() []ContentMetadata1 {
	if o == nil || IsNil(o.Metadata) {
		var ret []ContentMetadata1
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOperationKeyMergeModesInner) GetMetadataOk() ([]ContentMetadata1, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MergeOperationKeyMergeModesInner) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []ContentMetadata1 and assigns it to the Metadata field.
func (o *MergeOperationKeyMergeModesInner) SetMetadata(v []ContentMetadata1) {
	o.Metadata = v
}

func (o MergeOperationKeyMergeModesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeOperationKeyMergeModesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.MergeBehavior) {
		toSerialize["mergeBehavior"] = o.MergeBehavior
	}
	if !IsNil(o.ExpectedTargetContent) {
		toSerialize["expectedTargetContent"] = o.ExpectedTargetContent
	}
	if !IsNil(o.ResolvedContent) {
		toSerialize["resolvedContent"] = o.ResolvedContent
	}
	if !IsNil(o.ExpectedTargetDocumentation) {
		toSerialize["expectedTargetDocumentation"] = o.ExpectedTargetDocumentation
	}
	if !IsNil(o.ResolvedDocumentation) {
		toSerialize["resolvedDocumentation"] = o.ResolvedDocumentation
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableMergeOperationKeyMergeModesInner struct {
	value *MergeOperationKeyMergeModesInner
	isSet bool
}

func (v NullableMergeOperationKeyMergeModesInner) Get() *MergeOperationKeyMergeModesInner {
	return v.value
}

func (v *NullableMergeOperationKeyMergeModesInner) Set(val *MergeOperationKeyMergeModesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeOperationKeyMergeModesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeOperationKeyMergeModesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeOperationKeyMergeModesInner(val *MergeOperationKeyMergeModesInner) *NullableMergeOperationKeyMergeModesInner {
	return &NullableMergeOperationKeyMergeModesInner{value: val, isSet: true}
}

func (v NullableMergeOperationKeyMergeModesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeOperationKeyMergeModesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


